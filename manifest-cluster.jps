type: install
id: jenkins
baseUrl: https://raw.githubusercontent.com/jelastic-jps/jenkins/master
logo: /images/jenkins.png
name: Jenkins DevOps Pack
targetRegions:
  type: [ vz.*, pcs.* ]
categories:
  - apps/dev-tools
  - apps/popular
  - apps/dev-and-admin-tools
homepage: https://jenkins.io/
description: /text/description.md

globals: 
  user: jelastic${fn.random(1000)}
  password: ${fn.password}
  tomcat: 9.0.21-openjdk-11.0.2
  javaengine: openjdk-11.0.2
  
onBeforeInit: |
  var MAX_CLOUDLET = "environment.maxcloudletsperrec";
  var SAME_NODES = "environment.maxsamenodescount";
  var max = 10, cloudlets = 8, markup = "", q = jelastic.billing.account.GetQuotas("environment.maxnodescount;" + SAME_NODES + ";" + MAX_CLOUDLET).array;
  
  for (var i = 0, n = q.length; i < n; i++) {
    if (q[i].quota.name == MAX_CLOUDLET && q[i].value < cloudlets) {
      markup = "Quota limits: " + q[i].quota.name + " = " + q[i].value + ".  Please upgrade your account.";
      continue;
    }
    
    if (q[i].quota.name == SAME_NODES && max > q[i].value) max = q[i].value;
    if (max > q[i].value) max = (q[i].value > 1 ? q[i].value : 2) - 1;
    
  }
  var resp = {result: 0, settings: {fields: [{type: "spinner", name: "nodes", caption: "Workers", min: 1, max: max, "default": Math.min(2, max)}]}};
  if (markup) {
    resp.settings.fields.push({"type": "displayfield", "cls": "warning", "height": 30, "hideLabel": true, "markup": markup});
    resp.settings.fields.push({"type": "compositefield","height": 0,"hideLabel": true,"width": 0,"items": [{"height": 0,"type": "string","required": true}]})
  }
  return resp;
  
nodes:
  - cloudlets: 8
    nodeType: tomcat
    displayName: Master 
    tag: ${globals.tomcat}
    env:
      XMX_DEF_PERCENT: 50

  - cloudlets: 8
    nodeType: javaengine
    nodeGroup: slaves
    displayName: Workers
    tag: ${globals.javaengine} 
    count: ${settings.nodes}
    scalingMode: stateless
    diskLimit: 20G
    startService: false

settings:
  fields:  
  - type: spinner
    name: nodes
    caption: Workers
    min: 1
    max: 10
    default: 2

skipNodeEmails: true

onInstall:
  install:
    jps: ${baseUrl}/addons/auto-clustering/auto-cluster.jps?_r=${fn.random}
    nodeGroup: cp
    settings:
      cloned: 'false'
      user: ${globals.user}
      password: ${globals.password}

success: /text/success.md
